title: Cell
type: object
properties:
  type:
    description: The type of node, always `"Cell"`
    type: string
    const: Cell
  lang:
    description: The programming language the source code is written in
    type: string
    enum:
      - r
      - js
      - mini
      - node
      - py
      - pyjp
      - sql
  code:
    description: The source code of the cell
    type: string
  expr:
    description: Should the cell's source code only contain simple expressions?
    type: boolean
    default: false
  global:
    description: Should this cell be executed in the global scope of the exection `Context`?
    type: boolean
    default: false
  inputs:
    description: An array of cell inputs.
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        value:
          type: object
  outputs:
    description: An array of cell outputs. Currently it is assumed that all cells only have a single output.
    type: array
    items:
      type: object
      properties:
        name:
          description: The name of the output
          type: string
        value:
          description: The value of the output
          type: object
  options:
    description: |
      Options for compiling and executing this cell. The number, names and values of options
      is flexible and will depend upon hte capabilities of the language and execution context
    type: object
required:
  - type
  - source
